#!/bin/bash

# Define main directories
down="/storage/emulated/0/Download"
tool_dir="$down/RYNA_CODE"
output_dir="$tool_dir/output"

# Colors
NOCOLOR='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
LIGHTGREEN='\033[1;32m'
LIGHTRED='\033[1;31m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'

# Language variables
declare -A lang
lang["en,0"]="English"
lang["en,1"]="Unpack OBB file"
lang["en,2"]="Repack OBB file"
lang["en,3"]="This button is not active"
lang["en,4"]="Exit"
lang["en,5"]="Select option (1-4): "
lang["en,6"]="Invalid option!"
lang["en,7"]="No unpacked files found"
lang["en,8"]="Successfully unpacked to: "
lang["en,9"]="Successfully repacked OBB file"
lang["en,10"]="Output: "
lang["en,11"]="Select file number: "
lang["en,12"]="No OBB files found in "
lang["en,13"]="Available OBB files:"
lang["en,14"]="Back to menu"
lang["en,15"]="Invalid selection!"
lang["en,16"]="Unpacking "
lang["en,17"]="Preparing files..."
lang["en,18"]="Adjusting file size..."
lang["en,19"]="üöÄ RePacking OBB Files..."
lang["en,20"]="üìÇ Select OBB file to unpack:"
lang["en,21"]="Opening Telegram channel..."
lang["en,22"]="‚úì Telegram channel opened"

lang["de,0"]="Deutsch"
lang["de,1"]="OBB-Datei entpacken"
lang["de,2"]="OBB-Datei neu packen"
lang["de,3"]="Telegram-Kanal"
lang["de,4"]="Beenden"
lang["de,5"]="Option w√§hlen (1-4): "
lang["de,6"]="Ung√ºltige Option!"
lang["de,7"]="Keine entpackten Dateien gefunden"
lang["de,8"]="Erfolgreich entpackt nach: "
lang["de,9"]="OBB-Datei erfolgreich neu gepackt"
lang["de,10"]="Ausgabe: "
lang["de,11"]="Dateinummer ausw√§hlen: "
lang["de,12"]="Keine OBB-Dateien gefunden in "
lang["de,13"]="Verf√ºgbare OBB-Dateien:"
lang["de,14"]="Zur√ºck zum Men√º"
lang["de,15"]="Ung√ºltige Auswahl!"
lang["de,16"]="Entpacke "
lang["de,17"]="Dateien werden vorbereitet..."
lang["de,18"]="Dateigr√∂√üe wird angepasst..."
lang["de,19"]="üöÄ OBB-Dateien werden neu gepackt..."
lang["de,20"]="üìÇ OBB-Datei zum Entpacken ausw√§hlen:"
lang["de,21"]="Telegram-Kanal wird ge√∂ffnet..."
lang["de,22"]="‚úì Telegram-Kanal ge√∂ffnet"

lang["es,0"]="Espa√±ol"
lang["es,1"]="Desempaquetar archivo OBB"
lang["es,2"]="Reempaquetar archivo OBB"
lang["es,3"]="Canal de Telegram"
lang["es,4"]="Salir"
lang["es,5"]="Seleccione opci√≥n (1-4): "
lang["es,6"]="¬°Opci√≥n inv√°lida!"
lang["es,7"]="No se encontraron archivos desempaquetados"
lang["es,8"]="Desempaquetado correctamente en: "
lang["es,9"]="Archivo OBB reempaquetado con √©xito"
lang["es,10"]="Salida: "
lang["es,11"]="Seleccione n√∫mero de archivo: "
lang["es,12"]="No se encontraron archivos OBB en "
lang["es,13"]="Archivos OBB disponibles:"
lang["es,14"]="Volver al men√∫"
lang["es,15"]="¬°Selecci√≥n inv√°lida!"
lang["es,16"]="Desempaquetando "
lang["es,17"]="Preparando archivos..."
lang["es,18"]="Ajustando tama√±o de archivo..."
lang["es,19"]="üöÄ Reempaquetando archivos OBB..."
lang["es,20"]="üìÇ Seleccione archivo OBB para desempaquetar:"
lang["es,21"]="Abriendo canal de Telegram..."
lang["es,22"]="‚úì Canal de Telegram abierto"

lang["tr,0"]="T√ºrk√ße"
lang["tr,1"]="OBB dosyasƒ±nƒ± a√ß"
lang["tr,2"]="OBB dosyasƒ±nƒ± yeniden paketle"
lang["tr,3"]="Bu buton ≈üu an i√ßin aktif deƒüil"
lang["tr,4"]="√áƒ±kƒ±≈ü"
lang["tr,5"]="Se√ßenek se√ßin (1-4): "
lang["tr,6"]="Ge√ßersiz se√ßenek!"
lang["tr,7"]="A√ßƒ±lmƒ±≈ü dosya bulunamadƒ±"
lang["tr,8"]="Ba≈üarƒ±yla a√ßƒ±ldƒ±: "
lang["tr,9"]="OBB dosyasƒ± ba≈üarƒ±yla yeniden paketlendi"
lang["tr,10"]="√áƒ±ktƒ±: "
lang["tr,11"]="Dosya numarasƒ± se√ßin: "
lang["tr,12"]="≈ûurada OBB dosyasƒ± bulunamadƒ±: "
lang["tr,13"]="Mevcut OBB dosyalarƒ±:"
lang["tr,14"]="Men√ºye d√∂n"
lang["tr,15"]="Ge√ßersiz se√ßim!"
lang["tr,16"]="A√ßƒ±lƒ±yor "
lang["tr,17"]="Dosyalar hazƒ±rlanƒ±yor..."
lang["tr,18"]="Dosya boyutu ayarlanƒ±yor..."
lang["tr,19"]="üöÄ OBB Dosyalarƒ± Yeniden Paketleniyor..."
lang["tr,20"]="üìÇ A√ßƒ±lacak OBB dosyasƒ±nƒ± se√ßin:"
lang["tr,21"]="Telegram kanalƒ± a√ßƒ±lƒ±yor..."
lang["tr,22"]="‚úì Telegram kanalƒ± a√ßƒ±ldƒ±"

# Current language (default: English)
current_lang="en"

# Function to get language string
function getLang {
    local key="$1"
    echo "${lang["$current_lang,$key"]}"
}

# Check and install required packages
function check_dependencies {
    if ! command -v zip &> /dev/null || ! command -v unzip &> /dev/null; then
        echo -e "${YELLOW}Installing required packages...${NOCOLOR}"
        pkg update -y && pkg install -y zip unzip
        if [ $? -ne 0 ]; then
            echo -e "${LIGHTRED}Failed to install dependencies!${NOCOLOR}"
            exit 1
        fi
        echo -e "${GREEN}Dependencies installed successfully.${NOCOLOR}"
        sleep 2
    fi
}

# Create necessary directories
mkdir -p "$tool_dir" "$output_dir"

function show_header {
    clear
    echo -e "${BLUE}‚Ä¢„Éª‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ„Éª‚Ä¢${NOCOLOR}"
    echo -e "${GREEN}        üõ†Ô∏è RYNA CODE 1.2 OBB TOOL üõ†Ô∏è${NOCOLOR}"
    echo -e "${BLUE}‚Ä¢„Éª‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ„Éª‚Ä¢${NOCOLOR}"
    echo ""
}

function simple_progress {
    echo -ne "${CYAN}["
    for i in {1..20}; do
        echo -ne "‚ñì"
        sleep 0.05
    done
    echo -e "]${NOCOLOR}"
}

function sizeupdown {
    cd "$output_dir" || return
    obbsize=$(cat "$tool_dir/boyutkoruma.ini")
    count=$(du -b *.obb.zip | awk '{print $1}')
    
    echo -e "${CYAN}$(getLang 18)${NOCOLOR}"
    simple_progress
    
    if [ $count -lt $obbsize ]; then
        while [ $count -lt $obbsize ]; do
            truncate -s+1 *.zip
            let count=count+1
        done
    else
        while [ $count -gt $obbsize ]; do
            truncate -s-1 *.zip
            let count=count-1
        done
    fi
}

function fnsh {
    cd "$output_dir" || return
    obbsize=$(cat "$tool_dir/boyutkoruma.ini")
    count=$(du -b *.zip | awk '{print $1}')
    
    if [ $count -lt $obbsize ]; then
        while [ $count -lt $obbsize ]; do
            truncate -s+100 *.zip
            let count=count+100
        done
        sizeupdown
    else
        while [ $count -gt $obbsize ]; do
            truncate -s-100 *.zip
            let count=count-100
        done
        sizeupdown
    fi
}

function repackobb {
    printf "\n"
    echo -e "${YELLOW}$(getLang 19)${NOCOLOR}"
    cd "$output_dir" || return
    
    mv "$tool_dir"/*.zip "$output_dir" 2>/dev/null
    
    echo -e "${CYAN}$(getLang 17)${NOCOLOR}"
    simple_progress
    
    obbnm=$(find . -name "*.obb.zip" -type f -printf "%f\n")
    obbdir=$(find . -maxdepth 1 -type d ! -name "." -printf "%f\n")
    
    zip -r -0 "$obbnm" "$obbdir"
    fnsh
    
    printf "\n"
    cd "$output_dir" || return
    obbsize=$(cat "$tool_dir/boyutkoruma.ini")
    four=$(du -b *.zip | awk '{print $1}')
    five=$(expr $obbsize - $four)
    six=$(expr $five / 8)
    
    for file in *.obb.zip; do
        mv "$file" "${file%.obb.zip}.obb"
    done
    
    rm -rf "$tool_dir/boyutkoruma.ini"
    rm -rf "$obbdir"
    
    echo -e "\n${LIGHTGREEN}‚úÖ $(getLang 9)${NOCOLOR}"
    echo -e "${PURPLE}‚û§ $(getLang 10) $output_dir${NOCOLOR}"
    read -p "$(getLang 14)... "
    main_menu
}

function unpackobb {
    printf "\n"
    echo -e "${YELLOW}$(getLang 20)${NOCOLOR}"
    
    cd "$down" || return
    files=($(find . -maxdepth 1 -name "*.obb" -exec basename {} \;))
    
    if [ ${#files[@]} -eq 0 ]; then
        echo -e "${LIGHTRED}$(getLang 12) $down${NOCOLOR}"
        read -p "$(getLang 14)... "
        main_menu
        return
    fi
    
    echo -e "${CYAN}$(getLang 13)${NOCOLOR}"
    for i in "${!files[@]}"; do
        echo -e "${GREEN}$((i+1)). ${files[i]}${NOCOLOR}"
    done
    echo -e "${LIGHTRED}0. $(getLang 14)${NOCOLOR}"
    
    while true; do
        read -p "$(getLang 11) " choice
        if [[ $choice -eq 0 ]]; then
            main_menu
            return
        elif [[ $choice -ge 1 && $choice -le ${#files[@]} ]]; then
            selected="${files[$((choice-1))]}"
            break
        else
            echo -e "${LIGHTRED}$(getLang 15)${NOCOLOR}"
        fi
    done
    
    mkdir -p "$output_dir"
    cd "$output_dir" || return
    
    echo -e "${CYAN}$(getLang 16) $selected...${NOCOLOR}"
    simple_progress
    
    cp "$down/$selected" .
    
    for f in *.obb; do 
        mv "$f" "$f.zip"
    done
    
    echo $(du -b *.obb.zip | awk '{print $1}') > "$tool_dir/boyutkoruma.ini"
    
    unzip -q *.obb.zip
    sleep 1
    
    mv *.obb.zip "$tool_dir"
    
    echo -e "\n${LIGHTGREEN}‚úÖ $(getLang 8) $output_dir${NOCOLOR}"
    read -p "$(getLang 14)... "
    main_menu
}

function open_telegram {
    echo -e "\n${CYAN}$(getLang 21)${NOCOLOR}"
    sleep 1
    if command -v am &> /dev/null; then
        am start -a android.intent.action.VIEW -d "https://t.me/rynacode" > /dev/null 2>&1
    else
        xdg-open "https://t.me/rynacode" > /dev/null 2>&1
    fi
    echo -e "${GREEN}‚úì $(getLang 22)${NOCOLOR}"
    sleep 2
    main_menu
}

function select_language {
    show_header
    check_dependencies
    
    echo -e "${CYAN}1. English (English)"
    echo -e "2. Deutsch (German)"
    echo -e "3. Espa√±ol (Spanish)"
    echo -e "4. T√ºrk√ße (Turkish)${NOCOLOR}"
    
    while true; do
        read -p "Select language (1-4): " lang_choice
        case $lang_choice in
            1) current_lang="en"; break ;;
            2) current_lang="de"; break ;;
            3) current_lang="es"; break ;;
            4) current_lang="tr"; break ;;
            *) echo -e "${LIGHTRED}Invalid selection! Please choose 1-4.${NOCOLOR}" ;;
        esac
    done
}

function main_menu {
    show_header
    
    echo -e "${GREEN}$(getLang 0)${NOCOLOR}"
    echo -e "${CYAN}1. üóÉÔ∏è $(getLang 1)"
    echo -e "2. üóÑÔ∏è $(getLang 2)"
    echo -e "3. üì¢ $(getLang 3)"
    echo -e "4. ‚ùå $(getLang 4)${NOCOLOR}"
    
    while true; do
        read -p "$(getLang 5) " choice
        case $choice in
            1) unpackobb ;;
            2)
                if [ -f "$tool_dir/boyutkoruma.ini" ]; then
                    repackobb
                else
                    echo -e "${LIGHTRED}$(getLang 7)${NOCOLOR}"
                    sleep 1
                    main_menu
                fi
                ;;
            3) open_telegram ;;
            4) exit 0 ;;
            *) echo -e "${LIGHTRED}$(getLang 6)${NOCOLOR}" ;;
        esac
    done
}

# Start by selecting language
select_language
# Then show main menu
main_menu